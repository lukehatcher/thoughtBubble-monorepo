{"version":3,"sources":[".././src/MainPanel.ts",".././src/generateNonce.ts","../external \"vscode\"","../webpack/bootstrap",".././src/extension.ts"],"names":[],"mappings":"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","file":"extension.js","sourcesContent":["export function test() {\n\tconsole.log('hello from things')\n}\n","export function getNonce(): string {\n\tlet text = '';\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tfor (let i = 0; i < 32; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\treturn text;\n}","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport { getNonce } from './generateNonce';\nimport { test } from './MainPanel';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('thoughtBubble.start', () => {\n\t\t\tMainPanel.createOrShow(context.extensionUri);\n\t\t\ttest();\n\t\t})\n\t);\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('thoughtBubble.kill', () => {\n\t\t\tMainPanel.kill();\n\t\t})\n\t);\n\n}\n\n// ===============================================================================================\nclass MainPanel {\n\t/**\n\t * Track the currently panel. Only allow a single panel to exist at a time.\n\t */\n\tpublic static currentPanel: MainPanel | undefined;\n\n\tpublic static readonly viewType = 'thoughtBubble';\n\n\tprivate readonly _panel: vscode.WebviewPanel;\n\tprivate readonly _extensionUri: vscode.Uri;\n\tprivate _disposables: vscode.Disposable[] = [];\n\n\tpublic static createOrShow(extensionUri: vscode.Uri) {\n\t\tconst column = vscode.window.activeTextEditor\n\t\t\t? vscode.window.activeTextEditor.viewColumn\n\t\t\t: undefined;\n\t\t// If you already have the tab open, show it.\n\t\tif (MainPanel.currentPanel) {\n\t\t\tMainPanel.currentPanel._panel.reveal(column);\n\t\t\treturn;\n\t\t}\n\t\t// Otherwise, create a new panel (aka tab).\n\t\tconst panel = vscode.window.createWebviewPanel(\n\t\t\tMainPanel.viewType, // Identifies the type of the webview. Used internally // ??????\n\t\t\t'thoughtBubble', // Title of the panel displayed to the user\n\t\t\tvscode.ViewColumn.One, // Editor column to show the new webview panel in\n\t\t\t{\n\t\t\t\tenableScripts: true,\n\t\t\t\tretainContextWhenHidden: true,\n\t\t\t\tlocalResourceRoots: [vscode.Uri.joinPath(extensionUri, 'media')]\n\t\t\t}\n\t\t);\n\t\tMainPanel.currentPanel = new MainPanel(panel, extensionUri);\n\t}\n\n\tpublic static kill() {\n    MainPanel.currentPanel?.dispose();\n    MainPanel.currentPanel = undefined;\n  }\n\n\tpublic static revive(panel: vscode.WebviewPanel, extensionUri: vscode.Uri) {\n\t\tMainPanel.currentPanel = new MainPanel(panel, extensionUri);\n\t}\n\n\tprivate constructor(panel: vscode.WebviewPanel, extensionUri: vscode.Uri) {\n\t\tthis._panel = panel;\n\t\tthis._extensionUri = extensionUri;\n\n\t\t// Set the webview's initial html content\n\t\tthis._render(this._panel.webview);\n\n\t\t// Listen for when the panel is disposed\n\t\t// This happens when the user closes the panel or when the panel is closed programatically\n\t\tthis._panel.onDidDispose(() => this.dispose(), null, this._disposables);\n\n\t\t// Handle messages from the webview\n\t\tthis._panel.webview.onDidReceiveMessage(\n\t\t\tmessage => {\n\t\t\t\tswitch (message.command) {\n\t\t\t\t\tcase 'alert':\n\t\t\t\t\t\tvscode.window.showErrorMessage(message.text);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\tnull,\n\t\t\tthis._disposables\n\t\t);\n\t}\n\n\tpublic dispose() {\n\t\tMainPanel.currentPanel = undefined;\n\n\t\t// Clean up our resources\n\t\tthis._panel.dispose();\n\n\t\twhile (this._disposables.length) {\n\t\t\tconst x = this._disposables.pop();\n\t\t\tif (x) {\n\t\t\t\tx.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _render(webview: vscode.Webview) {\n\t\tthis._panel.title = 'thoughtBubble';\n\t\tthis._panel.webview.html = this._getHtmlForWebview(webview);\n\t}\n\n\tprivate _getHtmlForWebview(webview: vscode.Webview) {\n\t\t// Local path to main script run in the webview\n\t\tconst scriptPathOnDisk = vscode.Uri.joinPath(this._extensionUri, 'media', 'main.js');\n\t\tconst scriptPathOnDisk2 = vscode.Uri.joinPath(this._extensionUri, 'media', 'main2.js');\n\n\t\t// And the uri we use to load this script in the webview\n\t\tconst scriptUri = webview.asWebviewUri(scriptPathOnDisk);\n\t\tconst scriptUri2 = webview.asWebviewUri(scriptPathOnDisk2);\n\n\t\t// Local path to css styles\n\t\tconst styleResetPath = vscode.Uri.joinPath(this._extensionUri, 'media', 'reset.css');\n\t\tconst stylesPathMainPath = vscode.Uri.joinPath(this._extensionUri, 'media', 'vscode.css');\n\n\t\t// Uri to load styles into webview\n\t\tconst stylesResetUri = webview.asWebviewUri(styleResetPath);\n\t\tconst stylesMainUri = webview.asWebviewUri(stylesPathMainPath);\n\n\t\t// Use a nonce to only allow specific scripts to be run;\n\t\tconst nonce = getNonce();\n\n\t\treturn `<!DOCTYPE html>\n\t\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t<!--\n\t\t\t\t\tUse a content security policy to only allow loading images from https or from our extension directory,\n\t\t\t\t\tand only allow scripts that have a specific nonce.\n\t\t\t\t-->\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"style-src ${webview.cspSource}; img-src ${webview.cspSource} https:; script-src 'nonce-${nonce}';\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t\t<link href=\"${stylesResetUri}\" rel=\"stylesheet\">\n\t\t\t\t<link href=\"${stylesMainUri}\" rel=\"stylesheet\">\n\t\t\t\t<script nonce=\"${nonce}\">\n\t\t\t\t\tconst vscodeGlobal = acquireVsCodeApi();\n\t\t\t\t</script>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<div id=\"root\"></div>\n\t\t\t\t<h1>ts-react into vscode :)</h1>\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri2}\"></script>\n\t\t\t</body>\n\t\t\t</html>`;\n\t}\n}\n"],"sourceRoot":""}